{
	"info": {
		"_postman_id": "55502019-0cd5-454a-8528-d27de0cd8191",
		"name": "Eteration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23590863"
	},
	"item": [
		{
			"name": "createBankAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson = pm.response.json();\r",
							"if (responseJson.accountNumber) {\r",
							"    pm.collectionVariables.set(\"accountNumber\", responseJson.accountNumber);\r",
							"    console.log(\"Account number set to collection variable: \" + responseJson.accountNumber);\r",
							"} else {\r",
							"    console.warn(\"Account number not found in the response.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"owner\": \"{{$randomFullName}}\",\r\n    \"balance\": 5000.00\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/account/v1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account",
						"v1"
					]
				}
			},
			"response": []
		},
		{
			"name": "depositMoney",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/account/v1/credit/{{accountNumber}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account",
						"v1",
						"credit",
						"{{accountNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "withdrawMoney",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": 5000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/account/v1/debit/{{accountNumber}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account",
						"v1",
						"debit",
						"{{accountNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "withdrawMoney_invalidParameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Check if the status is 'FAIL' and the message contains 'Bank account not found'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.equal('FAIL');\r",
							"    pm.expect(jsonData.message).to.include('Bank account not found');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/account/v1/debit/1b2d6a46-26af-46f7-be1c-63680212bd81",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account",
						"v1",
						"debit",
						"1b2d6a46-26af-46f7-be1c-63680212bd81"
					]
				}
			},
			"response": []
		},
		{
			"name": "readBankAccount",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/account/v1/{{accountNumber}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account",
						"v1",
						"{{accountNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "readBankAccount_invalidParameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have proper error message\", function () {\r",
							"    pm.expect(pm.response.text()).to.eql(\"Invalid account number format\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/account/v1/213qdasda",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account",
						"v1",
						"213qdasda"
					]
				}
			},
			"response": []
		},
		{
			"name": "readBankAccounts",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/account/v1?page=0&size=10&sort=createDate,desc",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account",
						"v1"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "createDate,desc"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accountNumber",
			"value": ""
		}
	]
}